<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="c_member">

	<insert id="create" parameterType="c_memberDTO">
		insert into c_member(c_id, c_passwd, c_name, c_birth, c_gender, 
			c_tel, c_email, c_zipcode, c_address1, c_address2, 
			c_interest, c_rdate, c_nickname)
		values(#{c_id}, #{c_passwd}, #{c_name}, #{c_birth}, #{c_gender}, 
			#{c_tel}, #{c_email}, #{c_zipcode}, #{c_address1}, #{c_address2}, 
			#{c_interest, jdbcType=VARCHAR}, sysdate, #{c_nickname, jdbcType=VARCHAR})	
	</insert>
	
	<select id="emailCheck" parameterType="String" resultType="int">
		select count(*)
		from c_member
		where c_email = #{c_email}
	</select>
	
	<select id="idCheck" parameterType="String" resultType="int">
		select count(*)
		from c_member
		where c_id = #{c_id}
	</select>
	
	<select id="read" parameterType="String" resultType="c_memberDTO">
		select c_id, c_name, c_birth, c_gender, c_tel, c_email, c_zipcode, c_address1, c_address2, c_interest, c_rdate, c_nickname
		from c_member
		where c_id = #{id}
	</select>
	
	<update id="update" parameterType="String">
		update c_member
		set c_tel=#{c_tel}, c_email=#{c_email}, c_zipcode=#{c_zipcode}, 
		c_address1=#{c_address1}, c_address2=#{c_address2}, c_interest=#{c_interest, jdbcType=VARCHAR}, c_nickname=#{c_nickname, jdbcType=VARCHAR}
		WHERE c_id = #{id}
	</update>
	
	<update id="updatePasswd" parameterType="String">
		update c_member
		set c_passwd=#{c_new_passwd}
		WHERE c_id = #{c_id}
	</update>
	
	<select id="passwdCheck" parameterType="map" resultType="int">
		select count(*)
		from c_member
		where c_id = #{id} and c_passwd = #{passwd}
	</select>
	
	<delete id="delete" parameterType="String">
	<!-- delete 시 member만 지우면 알아서 지워짐 -->		
		delete from member 
		where id = #{c_id}
	</delete>
	
	<select id="count_reservation" parameterType="String" resultType="int">
		<!-- 예약정보가 있다면 삭제 못하게. -->
		select count(*) as cnt
		from reservation
		where c_id = #{c_id}
	</select>
	
	<!-- 리스튼 테스트 안해봤음 -->
	<select id="list" parameterType="Map" resultType="c_memberDTO">
		SELECT c_id, c_name, c_birth, c_gender, c_tel, c_email, c_zipcode, c_address1, c_address2, c_interest, c_rdate, c_nickname, r
		from(
			SELECT c_id, c_name, c_birth, c_gender, c_tel, c_email, c_zipcode, c_address1, c_address2, c_interest, c_rdate, c_nickname, rownum r
			from(
				SELECT c_id, c_name, c_birth, c_gender, c_tel, c_email, c_zipcode, c_address1, c_address2, c_interest, c_rdate, c_nickname
				FROM c_member  
				<where>
					<choose>
						<when test="col == 'c_id'">
							c_id like '%'||#{word}||'%'
						</when>
						<when test="col == 'c_name'">
							c_name like '%'||#{word}||'%'
						</when>
					</choose>
				</where>
				ORDER BY c_rdate DESC 
			)
		)
		<![CDATA[
			where r >= #{sno} and r <= #{eno}
		]]>
	</select>
	  
</mapper>

